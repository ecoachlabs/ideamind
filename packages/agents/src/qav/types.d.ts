/**
 * Q/A/V Triad Type Definitions
 *
 * Shared types for Question Agent (QAQ), Answer Agent (QAA), and Question Validator (QV)
 */
/**
 * Question priority levels
 */
export type QuestionPriority = 'high' | 'medium' | 'low';
/**
 * Question categories
 */
export type QuestionCategory = 'clarification' | 'validation' | 'assumption' | 'risk' | 'consistency' | 'completeness';
/**
 * Question decision impact
 */
export type DecisionImpact = 'high' | 'medium' | 'low';
/**
 * Question generated by QAQ
 */
export interface Question {
    id: string;
    text: string;
    category: QuestionCategory;
    priority: QuestionPriority;
    decision_impact: DecisionImpact;
    context: {
        phase: string;
        artifact_ids?: string[];
        gap_type?: string;
    };
    tags?: string[];
    depends_on?: string[];
}
/**
 * Citation for evidence in answers
 */
export interface Citation {
    type: 'artifact' | 'tool_result' | 'km_node' | 'assumption';
    id: string;
    excerpt?: string;
    confidence: number;
    metadata?: Record<string, any>;
}
/**
 * Answer generated by QAA
 */
export interface Answer {
    answer_id: string;
    question_id: string;
    answer: string | 'UNKNOWN';
    citations: Citation[];
    confidence: number;
    reasoning?: string;
    next_steps?: string[];
    generated_by: string;
    timestamp: string;
}
/**
 * Validation result from QV
 */
export interface ValidationResult {
    question_id: string;
    answer_id: string;
    accepted: boolean;
    scores: {
        grounding: number;
        completeness: number;
        specificity: number;
        consistency: number;
    };
    overall_score: number;
    issues: string[];
    hints?: string[];
    validated_by: string;
    timestamp: string;
}
/**
 * QAV Bundle for Knowledge Refinery processing
 */
export interface QAVBundle {
    questions: Question[];
    answers: Answer[];
    validations: ValidationResult[];
    phase: string;
    run_id: string;
}
/**
 * Gap analysis result
 */
export interface Gap {
    type: 'missing_data' | 'ambiguity' | 'contradiction' | 'assumption' | 'risk';
    severity: 'high' | 'medium' | 'low';
    description: string;
    artifact_ids: string[];
    suggested_question: string;
    priority: number;
}
/**
 * Input for Question Agent (QAQ)
 */
export interface QuestionGenerationInput {
    phase: string;
    artifacts: any[];
    context: Record<string, any>;
    rubrics: Record<string, any>;
    prior_questions?: Question[];
}
/**
 * Input for Answer Agent (QAA)
 */
export interface AnswerGenerationInput {
    questions: Question[];
    artifacts: any[];
    allowlisted_tools: string[];
    phase: string;
    context?: Record<string, any>;
}
/**
 * Input for Question Validator (QV)
 */
export interface ValidationInput {
    questions: Question[];
    answers: Answer[];
    existing_km_nodes?: any[];
    phase?: string;
}
/**
 * Refinery processing result
 */
export interface RefineryProcessingResult {
    kmap_refs: string[];
    assumptions: any[];
    metrics: {
        questions_processed: number;
        answers_accepted: number;
        answers_unknown: number;
        frames_created: number;
        assumptions_created: number;
    };
}
//# sourceMappingURL=types.d.ts.map