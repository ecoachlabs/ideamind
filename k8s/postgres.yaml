apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ideamine
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
  clusterIP: None  # Headless service for StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: ideamine
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: "ideamine"
            - name: POSTGRES_USER
              value: "ideamine"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: migrations
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - ideamine
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - ideamine
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: migrations
          configMap:
            name: postgres-migrations
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
---
# Separate secret for PostgreSQL password
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: ideamine
type: Opaque
stringData:
  postgres-password: "CHANGEME-strong-password"
---
# ConfigMap containing database migrations
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-migrations
  namespace: ideamine
data:
  001-init.sql: |
    -- This will run automatically on first startup
    -- Add additional setup if needed
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pgcrypto";

  # Note: Full migrations should be run via init job or manual psql
  # See: kubectl exec -it postgres-0 -n ideamine -- psql -U ideamine -d ideamine < migrations/XXX.sql
