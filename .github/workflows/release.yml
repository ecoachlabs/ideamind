name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Generate changelog
        id: changelog
        run: |
          # Use conventional changelog
          npm install -g conventional-changelog-cli
          conventional-changelog -p angular -i CHANGELOG.md -s -r 0
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}

      - name: Publish to npm
        if: ${{ !contains(github.ref_name, '-') }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [create-release]
    if: ${{ !contains(github.ref_name, '-') }}
    environment:
      name: production
      url: https://ideamine.production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to Kubernetes
        run: |
          kubectl config use-context production
          kubectl set image deployment/orchestrator orchestrator=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/orchestrator:${{ github.ref_name }}
          kubectl set image deployment/worker worker=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/worker:${{ github.ref_name }}
          kubectl set image deployment/api api=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:${{ github.ref_name }}
          kubectl rollout status deployment/orchestrator
          kubectl rollout status deployment/worker
          kubectl rollout status deployment/api
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG_PRODUCTION }}

      - name: Run smoke tests
        run: |
          npm run test:smoke -- --env=production
        env:
          PRODUCTION_API_URL: https://api.ideamine.production
          SMOKE_TEST_TOKEN: ${{ secrets.SMOKE_TEST_TOKEN }}

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Deployment of ${{ github.ref_name }} to production completed
            URL: https://ideamine.production
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
